from HandTrackingModule import handDetector
from cv2 import VideoCapture, imread, resize, imshow, waitKey, destroyAllWindows


detector = handDetector(maxHands=1, detectionCon=0.1)
detectorWord = handDetector(maxHands=1, detectionCon=0.1)
posList = {'З': {0: [376, 339], 1: [339, 333], 2: [302, 292], 3: [262, 259], 4: [231, 231], 5: [348, 198], 6: [319, 127], 7: [273, 94], 8: [236, 77], 9: [334, 203], 10: [298, 155], 11: [270, 160], 12: [261, 162], 13: [319, 215], 14: [266, 193], 15: [261, 233], 16: [280, 255], 17: [308, 233], 18: [259, 220], 19: [256, 248], 20: [278, 271]}, 'Ж': {0: [434, 346], 1: [376, 314], 2: [321, 266], 3: [264, 238], 4: [219, 226], 5: [378, 172], 6: [282, 168], 7: [219, 179], 8: [177, 192], 9: [366, 172], 10: [273, 172], 11: [215, 185], 12: [168, 199], 13: [354, 182], 14: [269, 182], 15: [218, 189], 16: [173, 195], 17: [345, 199], 18: [274, 195], 19: [235, 202], 20: [201, 207]}, 'Д': {0: [468, 350], 1: [447, 318], 2: [393, 287], 3: [329, 291], 4: [285, 295], 5: [376, 211], 6: [304, 163], 7: [254, 132], 8: [215, 109], 9: [355, 229], 10: [283, 177], 11: [236, 145], 12: [197, 114], 13: [343, 259], 14: [289, 261], 15: [317, 284], 16: [345, 286], 17: [336, 297], 18: [288, 296], 19: [301, 310], 20: [321, 311]}, 'Е': {0: [436, 353], 1: [382, 309], 2: [333, 262], 3: [277, 235], 4: [233, 216], 5: [386, 170], 6: [313, 136], 7: [267, 151], 8: [243, 170], 9: [372, 184], 10: [304, 155], 11: [264, 172], 12: [242, 192], 13: [358, 200], 14: [293, 176], 15: [261, 191], 16: [246, 208], 17: [347, 217], 18: [293, 197], 19: [265, 203], 20: [252, 215]}, 'Б': {0: [389, 411], 1: [333, 405], 2: [294, 353], 3: [263, 309], 4: [234, 273], 5: [355, 253], 6: [339, 170], 7: [304, 116], 8: [276, 74], 9: [354, 237], 10: [331, 159], 11: [301, 147], 12: [295, 141], 13: [346, 239], 14: [289, 196], 15: [267, 236], 16: [277, 264], 17: [336, 251], 18: [288, 214], 19: [270, 231], 20: [279, 253]}, 'А': {0: [388, 358], 1: [389, 252], 2: [346, 170], 3: [294, 130], 4: [245, 126], 5: [285, 159], 6: [220, 140], 7: [264, 168], 8: [299, 180], 9: [264, 206], 10: [204, 187], 11: [264, 214], 12: [294, 223], 13: [250, 258], 14: [200, 240], 15: [257, 261], 16: [287, 269], 17: [239, 315], 18: [202, 297], 19: [240, 303], 20: [264, 310]}, 'В': {0: [339, 458], 1: [385, 408], 2: [412, 336], 3: [428, 279], 4: [455, 240], 5: [358, 256], 6: [357, 174], 7: [357, 127], 8: [353, 87], 9: [322, 256], 10: [319, 163], 11: [319, 109], 12: [317, 63], 13: [288, 272], 14: [282, 187], 15: [282, 136], 16: [283, 93], 17: [254, 302], 18: [247, 238], 19: [245, 198], 20: [245, 163]}, 'Г': {0: [446, 220], 1: [381, 229], 2: [317, 270], 3: [272, 331], 4: [240, 376], 5: [373, 220], 6: [364, 240], 7: [355, 248], 8: [345, 252], 9: [426, 217], 10: [408, 258], 11: [405, 282], 12: [403, 302], 13: [472, 213], 14: [456, 252], 15: [450, 277], 16: [441, 300], 17: [512, 211], 18: [510, 231], 19: [502, 252], 20: [486, 274]}, 'У': {0: [427, 312], 1: [436, 290], 2: [439, 257], 3: [469, 215], 4: [507, 184], 5: [329, 231], 6: [269, 191], 7: [237, 163], 8: [208, 138], 9: [309, 235], 10: [285, 182], 11: [316, 209], 12: [339, 240], 13: [296, 243], 14: [282, 197], 15: [310, 223], 16: [326, 246], 17: [287, 253], 18: [267, 224], 19: [272, 225], 20: [276, 230]}, 'Т': {}, 'Р': {0: [416, 328], 1: [408, 286], 2: [364, 247], 3: [299, 251], 4: [257, 258], 5: [365, 202], 6: [306, 160], 7: [266, 133], 8: [235, 113], 9: [344, 227], 10: [294, 207], 11: [272, 214], 12: [266, 226], 13: [331, 249], 14: [282, 229], 15: [270, 237], 16: [273, 251], 17: [327, 271], 18: [286, 260], 19: [266, 262], 20: [260, 271]}, 'С': {0: [396, 372], 1: [342, 363], 2: [291, 323], 3: [246, 288], 4: [210, 257], 5: [369, 236], 6: [318, 169], 7: [263, 153], 8: [218, 160], 9: [377, 224], 10: [324, 153], 11: [261, 140], 12: [212, 148], 13: [376, 221], 14: [319, 158], 15: [259, 146], 16: [214, 153], 17: [367, 225], 18: [315, 176], 19: [268, 160], 20: [231, 162]}, 'Х': {0: [384, 373], 1: [370, 336], 2: [343, 283], 3: [301, 250], 4: [269, 228], 5: [390, 206], 6: [384, 125], 7: [342, 96], 8: [308, 98], 9: [363, 219], 10: [328, 176], 11: [326, 186], 12: [342, 194], 13: [337, 239], 14: [286, 219], 15: [295, 248], 16: [319, 254], 17: [319, 261], 18: [272, 244], 19: [280, 267], 20: [301, 283]}, 'Ф': {0: [357, 383], 1: [319, 324], 2: [304, 252], 3: [279, 193], 4: [258, 145], 5: [408, 197], 6: [332, 148], 7: [273, 140], 8: [237, 139], 9: [388, 194], 10: [313, 155], 11: [255, 146], 12: [211, 141], 13: [364, 198], 14: [293, 159], 15: [248, 154], 16: [213, 148], 17: [340, 204], 18: [287, 169], 19: [255, 166], 20: [231, 162]}, 'Ц': {0: [332, 447], 1: [372, 421], 2: [380, 358], 3: [349, 315], 4: [313, 289], 5: [379, 282], 6: [380, 200], 7: [379, 148], 8: [377, 107], 9: [338, 281], 10: [338, 192], 11: [337, 135], 12: [338, 90], 13: [299, 297], 14: [293, 254], 15: [303, 298], 16: [309, 334], 17: [264, 325], 18: [261, 293], 19: [278, 326], 20: [290, 357]}, 'Ч': {0: [386, 394], 1: [329, 324], 2: [283, 248], 3: [231, 199], 4: [187, 174], 5: [386, 181], 6: [301, 138], 7: [237, 134], 8: [187, 138], 9: [376, 183], 10: [287, 147], 11: [229, 149], 12: [181, 156], 13: [361, 191], 14: [277, 165], 15: [230, 162], 16: [188, 162], 17: [348, 210], 18: [280, 186], 19: [240, 185], 20: [203, 188]}, 'Ъ': {0: [352, 450], 1: [405, 415], 2: [435, 333], 3: [456, 264], 4: [487, 220], 5: [376, 267], 6: [345, 185], 7: [320, 141], 8: [300, 101], 9: [333, 282], 10: [293, 268], 11: [311, 329], 12: [335, 339], 13: [295, 301], 14: [259, 292], 15: [280, 343], 16: [304, 347], 17: [261, 321], 18: [229, 303], 19: [246, 341], 20: [266, 353]}, 'Ы': {0: [345, 487], 1: [385, 435], 2: [387, 361], 3: [349, 311], 4: [305, 289], 5: [381, 290], 6: [385, 206], 7: [387, 151], 8: [386, 103], 9: [336, 292], 10: [321, 222], 11: [328, 262], 12: [336, 303], 13: [296, 305], 14: [278, 246], 15: [295, 281], 16: [310, 316], 17: [259, 327], 18: [235, 267], 19: [227, 232], 20: [222, 201]}, 'Щ': {0: [325, 471], 1: [366, 416], 2: [366, 342], 3: [323, 293], 4: [274, 277], 5: [371, 276], 6: [369, 189], 7: [365, 136], 8: [358, 91], 9: [334, 274], 10: [329, 183], 11: [324, 124], 12: [318, 74], 13: [298, 287], 14: [291, 201], 15: [291, 145], 16: [289, 98], 17: [264, 312], 18: [253, 263], 19: [264, 270], 20: [274, 287]}, 'И': {}, 'Ш': {0: [320, 476], 1: [364, 428], 2: [363, 351], 3: [317, 298], 4: [271, 274], 5: [373, 284], 6: [369, 191], 7: [364, 136], 8: [357, 90], 9: [331, 279], 10: [324, 186], 11: [318, 126], 12: [314, 75], 13: [293, 288], 14: [284, 203], 15: [283, 148], 16: [283, 98], 17: [260, 310], 18: [256, 267], 19: [264, 277], 20: [269, 295]}, 'Ь': {0: [358, 461], 1: [404, 408], 2: [429, 330], 3: [449, 266], 4: [481, 223], 5: [377, 268], 6: [347, 186], 7: [320, 142], 8: [296, 101], 9: [337, 284], 10: [296, 263], 11: [310, 316], 12: [334, 334], 13: [301, 304], 14: [261, 286], 15: [281, 333], 16: [308, 346], 17: [267, 325], 18: [232, 299], 19: [248, 332], 20: [270, 349]}, 'Э': {0: [444, 398], 1: [397, 374], 2: [332, 341], 3: [265, 335], 4: [217, 337], 5: [366, 225], 6: [305, 152], 7: [251, 148], 8: [216, 157], 9: [357, 235], 10: [270, 236], 11: [279, 283], 12: [314, 297], 13: [343, 254], 14: [269, 262], 15: [288, 298], 16: [321, 303], 17: [332, 274], 18: [275, 283], 19: [280, 311], 20: [296, 325]}, 'Я': {0: [465, 399], 1: [402, 406], 2: [335, 367], 3: [282, 325], 4: [241, 287], 5: [363, 249], 6: [284, 185], 7: [231, 143], 8: [188, 112], 9: [355, 238], 10: [293, 157], 11: [234, 117], 12: [187, 86], 13: [344, 245], 14: [264, 234], 15: [269, 282], 16: [292, 311], 17: [335, 263], 18: [274, 262], 19: [278, 302], 20: [299, 328]}, 'Ю': {0: [395, 427], 1: [324, 393], 2: [266, 332], 3: [207, 287], 4: [156, 262], 5: [347, 241], 6: [244, 202], 7: [189, 221], 8: [155, 239], 9: [360, 229], 10: [260, 194], 11: [204, 217], 12: [171, 242], 13: [359, 232], 14: [270, 202], 15: [220, 221], 16: [190, 238], 17: [346, 238], 18: [295, 187], 19: [271, 162], 20: [256, 142]}, 'О': {0: [344, 452], 1: [290, 406], 2: [253, 339], 3: [218, 289], 4: [200, 242], 5: [365, 272], 6: [310, 189], 7: [263, 194], 8: [235, 219], 9: [380, 266], 10: [345, 175], 11: [311, 122], 12: [282, 80], 13: [381, 269], 14: [359, 184], 15: [339, 133], 16: [320, 91], 17: [368, 276], 18: [355, 209], 19: [341, 168], 20: [324, 134]}, 'П': {0: [314, 153], 1: [344, 206], 2: [365, 270], 3: [377, 316], 4: [388, 341], 5: [356, 254], 6: [333, 343], 7: [311, 406], 8: [296, 452], 9: [322, 232], 10: [295, 333], 11: [275, 403], 12: [264, 448], 13: [295, 204], 14: [268, 298], 15: [256, 358], 16: [249, 403], 17: [268, 175], 18: [248, 216], 19: [243, 232], 20: [238, 244]}, 'Н': {0: [357, 367], 1: [365, 305], 2: [370, 228], 3: [376, 165], 4: [381, 120], 5: [343, 240], 6: [343, 176], 7: [340, 122], 8: [334, 77], 9: [333, 268], 10: [321, 197], 11: [311, 133], 12: [305, 89], 13: [331, 301], 14: [306, 259], 15: [290, 244], 16: [282, 233], 17: [342, 337], 18: [324, 317], 19: [315, 310], 20: [311, 306]}, 'М': {0: [326, 158], 1: [364, 196], 2: [386, 262], 3: [392, 324], 4: [402, 367], 5: [385, 252], 6: [398, 324], 7: [405, 381], 8: [405, 431], 9: [344, 242], 10: [332, 328], 11: [324, 390], 12: [316, 438], 13: [303, 234], 14: [276, 312], 15: [259, 360], 16: [245, 398], 17: [266, 227], 18: [244, 293], 19: [234, 333], 20: [225, 368]}, 'Л': {0: [357, 71], 1: [400, 132], 2: [386, 189], 3: [339, 210], 4: [305, 217], 5: [357, 225], 6: [370, 314], 7: [375, 372], 8: [376, 414], 9: [305, 210], 10: [286, 304], 11: [271, 363], 12: [250, 408], 13: [270, 184], 14: [268, 248], 15: [292, 230], 16: [303, 201], 17: [246, 152], 18: [251, 207], 19: [271, 199], 20: [280, 177]}, 'К': {}}

port = 0
isWork = True
while isWork:
    camera = VideoCapture(port)
    if not camera.isOpened(): isWork = False
    port += 1
print('Возможные порты камеры:', *list(range(0, port-1)))

camera = VideoCapture(int(input('> ')))

scalePCam = 70
scalePWord = 80
cTime, pTime, = 0, 0
for word in posList:
    imgWord = imread('alphabet/' + word + '.png')
    imgWord = resize(imgWord, (int(imgWord.shape[1] * scalePWord / 100), int(imgWord.shape[0] * scalePWord / 100)))
    detectorWord.getImg(imgWord)
    detectorWord.drawPoints()
    imshow('Word', imgWord)
    while True:
        success, img = camera.read()
        img = resize(img, (int(img.shape[1] * scalePCam / 100), int(img.shape[0] * scalePCam / 100)))
        detector.getImg(img)
        pos = detector.getPositions()
        detector.drawPoints()
        imshow('Camera', img)
        if waitKey(1) & 0xFF == ord("q"): break
camera.release()
destroyAllWindows()